/**
 * @license
 * Copyright (C) 2012-2013 KO GmbH <copyright@kogmbh.com>
 *
 * @licstart
 * The JavaScript code in this page is free software: you can redistribute it
 * and/or modify it under the terms of the GNU Affero General Public License
 * (GNU AGPL) as published by the Free Software Foundation, either version 3 of
 * the License, or (at your option) any later version.  The code is distributed
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU AGPL for more details.
 *
 * As additional permission under GNU AGPL version 3 section 7, you
 * may distribute non-source (e.g., minimized or compacted) forms of
 * that code without the copy of the GNU GPL normally required by
 * section 4, provided you include this license notice and a URL
 * through which recipients can access the Corresponding Source.
 *
 * As a special exception to the AGPL, any HTML file which merely makes function
 * calls to this code, and for that purpose includes it by reference shall be
 * deemed a separate work for copyright law purposes. In addition, the copyright
 * holders of this code give you permission to combine this code with free
 * software libraries that are released under the GNU LGPL. You may copy and
 * distribute such a system following the terms of the GNU AGPL for this code
 * and the LGPL for the libraries. If you modify this code, you may extend this
 * exception to your version of the code, but you are not obligated to do so.
 * If you do not wish to do so, delete this exception statement from your
 * version.
 *
 * This license applies to this entire compilation.
 * @licend
 * @source: http://www.webodf.org/
 * @source: http://gitorious.org/webodf/webodf/
 */

/*global odf, runtime, Node*/

/**
 * Helper object for generating unique automatic style names. Used for direct formatting related operations.
 * Each name is only reported once per instance, irrespective of whether it is actually then inserted into
 * the automaticStyles or normal styles tree in the odfContainer.
 *
 * There is expected to be a single instance of the style name generator created per session. This is necessary
 * to close a potential race condition when generating unique style names for operations. As there is no guarantee
 * when a given op is executed, it is insufficient to simply rely on all previously generated names to be now present
 * in the document's style definitions. To cope with this, the names generated by this instance are also cached for
 * the lifetime of this object.
 *
 * Failure to do this could result in a situation like the following
 * 1. SessionController generates new OpAddParagraphStyle & adds to session's queue
 * 2. SessionController generates another OpAddParagraphStyle & adds to session's queue
 *
 * At step 2, as the session's queue implementation has no requirement that it immediately executes the operation from
 * step 1, it is likely that the style created in step 1 is not yet present in the document DOM.
 *
 *
 * @param {!string} prefix Prefix to use for unique name generation
 * @param {!odf.Formatting|!{getAllStyleNames: function()}} formatting Odf container to look for existing style information from
 * @constructor
 */
odf.StyleNameGenerator = function StyleNameGenerator(prefix, formatting) {
    "use strict";
    var reportedNames = {};

    /**
     * Generate a unique style name
     * @returns {!string}
     */
    this.generateName = function() {
        var name,
            existingNames = {},
            startIndex = 0;
        formatting.getAllStyleNames().forEach(function(styleName) {
            existingNames[styleName] = true;
        });
        do {
            name = prefix + startIndex;
            startIndex += 1;
        } while(reportedNames[name] || existingNames[name]);
        reportedNames[name] = true;
        return name;
    };
};

