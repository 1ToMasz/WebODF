@namespace text url(urn:oasis:names:tc:opendocument:xmlns:text:1.0);
@namespace draw url(urn:oasis:names:tc:opendocument:xmlns:drawing:1.0);
@namespace office url(urn:oasis:names:tc:opendocument:xmlns:office:1.0);
@namespace table url(urn:oasis:names:tc:opendocument:xmlns:table:1.0);

office|document-styles {
  display: none;
}
office|automatic-styles {
  display: none;
}

text|p, text|h {
  display: block;
  padding: 3px 3px 3px 3px;
  margin: 5px 5px 5px 5px;
}
text|h {
  font-weight: bold;
}
text|s:before { /* this needs to be the number of spaces given by text:c */
  content: ' ';
}
text|tab:before {
  display: inline;
  content: '	';
}
text|line-break:before {
  display: inline;
  content: '\A'; /* "\A" is a forced line break similar to <BR> in HTML */
}
office|text {
  display: block;
  background: white;
}
office|spreadsheet {
  display: block;
  border-collapse: collapse;
  empty-cells: show;
  font-family: sans-serif;
  font-size: 10pt;
}
office|presentation {
  background: #888888;
  display: inline-block;
}
draw|page {
  display: block;
  height: 19.05cm;
  width: 25.4cm;
  background: white;
  margin: 3px;
}
office|spreadsheet text|p {
  border: 0px;
  padding: 1px;
  margin: 0px;
}
office|spreadsheet table|table {
  background: white;
  margin: 3px;
}
office|spreadsheet table|table:after {
  /* show sheet name the end of the sheet */
  /*content: attr(table|name);*/ /* gives parsing error in opera */
}
office|spreadsheet table|table-row {
  counter-increment: row;
}
office|spreadsheet table|table-row:before {
  width: 3em;
  background: #cccccc;
  border: 1px solid black;
  text-align: center;
  content: counter(row);
}
office|spreadsheet table|table-cell {
  border: 1px solid #cccccc;
}
table|table {
  display: table;
  border: 1px solid black;
}
table|table-row {
  display: table-row;
}
table|table-column {
  display: table-column;
}
table|table-cell {
  display: table-cell;
}
draw|frame {
  display: block;
}
draw|image {
  display: block;
}
text|list { /* reset the list numbering for each list */
    counter-reset: list-num;
}
text|list-item {
    counter-increment: list-num;
}
text|list-item:before { /* prefix each list-item with a roman numeral */
    content: counter(list-num, upper-roman) ". ";
}


